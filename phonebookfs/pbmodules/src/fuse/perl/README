Fuse version 0.03
=================

This is a test release.  It seems to work quite well.  In fact, I can't
find any problems with it whatsoever.  If you do, I want to know.


INSTALLATION

To install this module type the standard commands as root:

   perl Makefile.PL
   make
   make test
   make install


DEPENDENCIES

This module requires the FUSE userspace library and the FUSE kernel module.


COPYRIGHT AND LICENCE

This is contributed to the FUSE project by Mark Glines <mark@glines.org>,
and is therefore subject to the same license and copyright as FUSE itself.
Please see the AUTHORS and COPYING files from the FUSE distribution for
more information.


EXAMPLES

There are a few example scripts.  You can find them in the examples/
subdirectory.  These are:

* example.pl, a simple "Hello world" type of script

* loopback.pl, a filesystem loopback-device.  like fusexmp from
               the main FUSE dist, it simply recurses file operations
               into the real filesystem.  Unlike fusexmp, it only
               re-shares files under the /tmp/test directory.

* rmount.pl, an NFS-workalike which tunnels through SSH.  It requires
             an account on some ssh server (obviously), with public-key
             authentication enabled.  (if you have to type in a password,
             you don't have this.  man ssh_keygen.).  Copy rmount_remote.pl
             to your home directory on the remote machine, and create a
             subdir somewhere, and then run it like:
             ./rmount.pl host /remote/dir /local/dir

* rmount_remote.pl, a ripoff of loopback.pl meant to be used as a backend
                    for rmount.pl.


BUGS

I've begun to build a formal testing framework.  Currently it can mount
and unmount loopback.pl, and all of the base-level functions have test
scripts.  These need to be fleshed out as problems are noticed.

The current test framework seems to work well, but the underlying mount/
unmount infrastructure is a crock.  I am not pleased with that code.

While most things work, I do still have a TODO list:
* "du -sb" reports a couple orders of magnitude too large a size.
* need to sort out cleaner mount semantics for the test framework
* figure out how to un-linuxcentrify the statfs tests
* test everything on other architectures and OS's

